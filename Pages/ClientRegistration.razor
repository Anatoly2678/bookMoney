@page "/client-registration"
@layout MainLayout

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JSRuntime

<style>
    .step-indicator {
        position: relative;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
        transition: all 0.3s ease;
    }

        .step-indicator.active {
            background-color: #0d6efd;
            color: white;
            transform: scale(1.1);
        }

        .step-indicator.completed {
            background-color: #198754;
            color: white;
        }

    .step-number {
        font-weight: bold;
        font-size: 1.1rem;
    }

    .step-check {
        display: none;
        font-size: 1.2rem;
    }

    .step-indicator.completed .step-number {
        display: none;
    }

    .step-indicator.completed .step-check {
        display: block;
    }

    .step-title {
        font-weight: 500;
        color: #6c757d;
    }

    .step-indicator.active + .step-title,
    .step-indicator.completed + .step-title {
        color: #0d6efd;
        font-weight: 600;
    }

    .step-content {
        animation: fadeIn 0.3s ease-in-out;
    }


    .document-card {
        transition: all 0.3s ease;
        border: 2px dashed #dee2e6;
    }

        .document-card:hover {
            border-color: #0d6efd;
            transform: translateY(-2px);
        }

    .document-upload-placeholder {
        height: 150px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        border: 2px dashed #6c757d;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .document-upload-placeholder:hover {
            border-color: #0d6efd;
            background-color: #f8f9fa;
        }

    .document-preview {
        max-height: 150px;
        object-fit: cover;
    }

    .form-control:focus, .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
    }

    .btn {
        border-radius: 6px;
        padding: 0.5rem 1.5rem;
        font-weight: 500;
    }
</style>

<PageTitle>Анкета клиента</PageTitle>

<div class="container-fluid py-4">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-lg border-0">
                <div class="card-header bg-primary text-white py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h2 class="h4 mb-0">
                            <i class="fas fa-user-tie me-2"></i>Анкета клиента
                        </h2>
                        <span class="badge bg-light text-primary fs-6">Шаг @currentStep из 3</span>
                    </div>
                </div>
                
                <!-- Индикатор прогресса -->
                <div class="card-body border-bottom">
                    <div class="progress mb-3" style="height: 8px;">
                        <div class="progress-bar bg-success" role="progressbar" 
                             style="width: @(currentStep * 33.33)%;" 
                             aria-valuenow="@(currentStep * 33.33)" 
                             aria-valuemin="0" 
                             aria-valuemax="100"></div>
                    </div>
                    
                    <div class="d-flex justify-content-between">
                        @foreach (var step in registrationSteps)
                        {
                            <div class="text-center">
                                <div class="step-indicator @(step.Number == currentStep ? "active" : step.Number < currentStep ? "completed" : "")">
                                    <span class="step-number">@step.Number</span>
                                    <i class="step-check fas fa-check"></i>
                                </div>
                                <small class="step-title mt-1 d-block">@step.Title</small>
                            </div>
                        }
                    </div>
                </div>
                
                <div class="card-body p-4">
                    <EditForm Model="@clientModel" OnValidSubmit="@HandleSubmit">
                        <DataAnnotationsValidator />
                        
                        <!-- Шаг 1: Основные данные -->
                        @if (currentStep == 1)
                        {
                            <div class="step-content">
                                <h3 class="h5 mb-4 text-center">
                                    <i class="fas fa-user me-2 text-primary"></i>Основные данные
                                </h3>
                                
                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        <label for="lastName" class="form-label fw-semibold">Фамилия *</label>
                                        <InputText @bind-Value="clientModel.LastName" 
                                                   class="form-control" 
                                                   id="lastName"
                                                   placeholder="Иванов" />
                                        <ValidationMessage For="@(() => clientModel.LastName)" />
                                    </div>
                                    
                                    <div class="col-md-4 mb-3">
                                        <label for="firstName" class="form-label fw-semibold">Имя *</label>
                                        <InputText @bind-Value="clientModel.FirstName" 
                                                   class="form-control" 
                                                   id="firstName"
                                                   placeholder="Иван" />
                                        <ValidationMessage For="@(() => clientModel.FirstName)" />
                                    </div>
                                    
                                    <div class="col-md-4 mb-3">
                                        <label for="middleName" class="form-label fw-semibold">Отчество *</label>
                                        <InputText @bind-Value="clientModel.MiddleName" 
                                                   class="form-control" 
                                                   id="middleName"
                                                   placeholder="Иванович" />
                                        <ValidationMessage For="@(() => clientModel.MiddleName)" />
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="birthDate" class="form-label fw-semibold">Дата рождения *</label>
                                        <InputDate @bind-Value="clientModel.BirthDate" 
                                                   class="form-control" 
                                                   id="birthDate" />
                                        <ValidationMessage For="@(() => clientModel.BirthDate)" />
                                    </div>
                                    
                                    <div class="col-md-6 mb-3">
                                        <label for="email" class="form-label fw-semibold">Email *</label>
                                        <InputText @bind-Value="clientModel.Email" 
                                                   class="form-control" 
                                                   id="email"
                                                   placeholder="ivanov@example.com" />
                                        <ValidationMessage For="@(() => clientModel.Email)" />
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="password" class="form-label fw-semibold">Пароль *</label>
                                        <InputText @bind-Value="clientModel.Password" 
                                                   type="password"
                                                   class="form-control" 
                                                   id="password"
                                                   placeholder="Не менее 8 символов" />
                                        <ValidationMessage For="@(() => clientModel.Password)" />
                                    </div>
                                    
                                    <div class="col-md-6 mb-3">
                                        <label for="confirmPassword" class="form-label fw-semibold">Подтверждение пароля *</label>
                                        <InputText @bind-Value="clientModel.ConfirmPassword" 
                                                   type="password"
                                                   class="form-control" 
                                                   id="confirmPassword"
                                                   placeholder="Повторите пароль" />
                                        <ValidationMessage For="@(() => clientModel.ConfirmPassword)" />
                                    </div>
                                </div>
                                
                                <div class="alert alert-info bg-light border-0 mt-3">
                                    <div class="d-flex">
                                        <div class="me-3 text-info">
                                            <i class="fas fa-info-circle fa-lg"></i>
                                        </div>
                                        <div>
                                            <small class="text-muted">
                                                Все поля обязательны для заполнения. Пароль должен содержать не менее 8 символов, 
                                                включая цифры и буквы в разных регистрах.
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <!-- Шаг 2: Загрузка документов -->
                        @if (currentStep == 2)
                        {
                            <div class="step-content">
                                <h3 class="h5 mb-4 text-center">
                                    <i class="fas fa-file-upload me-2 text-primary"></i>Загрузка документов
                                </h3>
                                
                                <div class="row">
                                    <!-- Разворот паспорта с фото -->
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100 document-card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Разворот с фотографией *</h6>
                                            </div>
                                            <div class="card-body text-center">
                                                @if (clientModel.PhotoPageImage != null)
                                                {
                                                    <div class="mb-2">
                                                        <img src="@GetImageUrl(clientModel.PhotoPageImage)" 
                                                             class="img-thumbnail document-preview" 
                                                             alt="Разворот с фото" />
                                                    </div>
                                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                                            @onclick="() => RemoveImage(photoPage)">
                                                        <i class="fas fa-trash me-1"></i>Удалить
                                                    </button>
                                                }
                                                else
                                                {
                                                    <div class="document-upload-placeholder" 
                                                         @onclick="() => OpenFileInput(photoPageInput)">
                                                        <i class="fas fa-camera fa-2x text-muted mb-2"></i>
                                                        <p class="small text-muted">Нажмите для загрузки</p>
                                                    </div>
                                                    <InputFile id="photoPageInput" class="d-none" 
                                                               accept="image/*" 
                                                                /> @* @onchange="(e) => HandleFileUpload(e, photoPage)" *@
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Селфи с паспортом -->
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100 document-card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Селфи с паспортом *</h6>
                                            </div>
                                            <div class="card-body text-center">
                                                @if (clientModel.SelfieWithPassportImage != null)
                                                {
                                                    <div class="mb-2">
                                                        <img src="@GetImageUrl(clientModel.SelfieWithPassportImage)" 
                                                             class="img-thumbnail document-preview" 
                                                             alt="Селфи с паспортом" />
                                                    </div>
                                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                                            @onclick="() => RemoveImage(selfie)">
                                                        <i class="fas fa-trash me-1"></i>Удалить
                                                    </button>
                                                }
                                                else
                                                {
                                                    <div class="document-upload-placeholder" 
                                                         @onclick="() => OpenFileInput(selfieInput)">
                                                        <i class="fas fa-user fa-2x text-muted mb-2"></i>
                                                        <p class="small text-muted">Нажмите для загрузки</p>
                                                    </div>
                                                    <InputFile id="selfieInput" class="d-none" 
                                                               accept="image/*" 
                                                                />@*  @onchange="(e) => HandleFileUpload(e, selfie)" *@
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Прописка -->
                                    <div class="col-md-4 mb-4">
                                        <div class="card h-100 document-card">
                                            <div class="card-header bg-light">
                                                <h6 class="mb-0">Страница с пропиской *</h6>
                                            </div>
                                            <div class="card-body text-center">
                                                @if (clientModel.RegistrationPageImage != null)
                                                {
                                                    <div class="mb-2">
                                                        <img src="@GetImageUrl(clientModel.RegistrationPageImage)" 
                                                             class="img-thumbnail document-preview" 
                                                             alt="Прописка" />
                                                    </div>
                                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                                            @onclick="() => RemoveImage(registration)">
                                                        <i class="fas fa-trash me-1"></i>Удалить
                                                    </button>
                                                }
                                                else
                                                {
                                                    <div class="document-upload-placeholder" 
                                                         @onclick="() => OpenFileInput(registrationInput)">
                                                        <i class="fas fa-home fa-2x text-muted mb-2"></i>
                                                        <p class="small text-muted">Нажмите для загрузки</p>
                                                    </div>
                                                    <InputFile id="registrationInput" class="d-none" 
                                                               accept="image/*" 
                                                               /> @*  @onchange="(e) => HandleFileUpload(e, registration)"  *@
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="alert alert-warning bg-light border-warning">
                                    <div class="d-flex">
                                        <div class="me-3 text-warning">
                                            <i class="fas fa-exclamation-triangle fa-lg"></i>
                                        </div>
                                        <div>
                                            <small class="text-muted">
                                                <strong>Требования к фотографиям:</strong><br/>
                                                - Хорошее освещение, все данные должны быть четко видны<br/>
                                                - Формат JPG или PNG, размер не более 5MB<br/>
                                                - Разворот паспорта: страницы 2-3<br/>
                                                - Селфи: ваше лицо и разворот паспорта должны быть четко видны<br/>
                                                - Прописка: страница с регистрацией по месту жительства
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <!-- Шаг 3: Паспортные данные -->
                        @if (currentStep == 3)
                        {
                            <div class="step-content">
                                <h3 class="h5 mb-4 text-center">
                                    <i class="fas fa-passport me-2 text-primary"></i>Паспортные данные
                                </h3>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="passportSeries" class="form-label fw-semibold">Серия паспорта *</label>
                                        <InputText @bind-Value="clientModel.PassportSeries" 
                                                   class="form-control" 
                                                   id="passportSeries"
                                                   placeholder="1234" 
                                                   maxlength="4" />
                                        <ValidationMessage For="@(() => clientModel.PassportSeries)" />
                                    </div>
                                    
                                    <div class="col-md-6 mb-3">
                                        <label for="passportNumber" class="form-label fw-semibold">Номер паспорта *</label>
                                        <InputText @bind-Value="clientModel.PassportNumber" 
                                                   class="form-control" 
                                                   id="passportNumber"
                                                   placeholder="567890" 
                                                   maxlength="6" />
                                        <ValidationMessage For="@(() => clientModel.PassportNumber)" />
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="issuedBy" class="form-label fw-semibold">Кем выдан *</label>
                                    <InputTextArea @bind-Value="clientModel.IssuedBy" 
                                                   class="form-control" 
                                                   id="issuedBy"
                                                   rows="2"
                                                   placeholder="Отделом УФМС России по г. Москве"></InputTextArea>
                                    <ValidationMessage For="@(() => clientModel.IssuedBy)" />
                                </div>
                                
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="issueDate" class="form-label fw-semibold">Дата выдачи *</label>
                                        <InputDate @bind-Value="clientModel.IssueDate" 
                                                   class="form-control" 
                                                   id="issueDate" />
                                        <ValidationMessage For="@(() => clientModel.IssueDate)" />
                                    </div>
                                    
                                    <div class="col-md-6 mb-3">
                                        <label for="departmentCode" class="form-label fw-semibold">Код подразделения *</label>
                                        <InputText @bind-Value="clientModel.DepartmentCode" 
                                                   class="form-control" 
                                                   id="departmentCode"
                                                   placeholder="123-456" 
                                                   maxlength="7" />
                                        <ValidationMessage For="@(() => clientModel.DepartmentCode)" />
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <label for="birthPlace" class="form-label fw-semibold">Место рождения *</label>
                                    <InputTextArea @bind-Value="clientModel.BirthPlace" 
                                                   class="form-control" 
                                                   id="birthPlace"
                                                   rows="2"
                                                   placeholder="г. Москва"></InputTextArea>
                                    <ValidationMessage For="@(() => clientModel.BirthPlace)" />
                                </div>
                                
                                <div class="mb-4">
                                    <label for="snils" class="form-label fw-semibold">СНИЛС *</label>
                                    <InputText @bind-Value="clientModel.SNILS" 
                                               class="form-control" 
                                               id="snils"
                                               placeholder="123-456-789 12" 
                                               maxlength="14" />
                                    <ValidationMessage For="@(() => clientModel.SNILS)" />
                                </div>
                                
                                <!-- Сводка данных -->
                                <div class="card bg-light mt-4">
                                    <div class="card-header">
                                        <h4 class="h6 mb-0">
                                            <i class="fas fa-check-circle me-2 text-success"></i>Проверьте введенные данные
                                        </h4>
                                    </div>
                                    <div class="card-body">
                                        <div class="row small">
                                            <div class="col-md-6 mb-2">
                                                <strong>ФИО:</strong><br/>
                                                @clientModel.LastName @clientModel.FirstName @clientModel.MiddleName
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <strong>Дата рождения:</strong><br/>
                                                @clientModel.BirthDate?.ToString("dd.MM.yyyy")
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <strong>Email:</strong><br/>
                                                @clientModel.Email
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <strong>Паспорт:</strong><br/>
                                                @clientModel.PassportSeries @clientModel.PassportNumber
                                            </div>
                                            <div class="col-md-12 mb-2">
                                                <strong>Кем выдан:</strong><br/>
                                                @clientModel.IssuedBy
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <strong>Дата выдачи:</strong><br/>
                                                @clientModel.IssueDate?.ToString("dd.MM.yyyy")
                                            </div>
                                            <div class="col-md-6 mb-2">
                                                <strong>Код подразделения:</strong><br/>
                                                @clientModel.DepartmentCode
                                            </div>
                                            <div class="col-md-12 mb-2">
                                                <strong>Место рождения:</strong><br/>
                                                @clientModel.BirthPlace
                                            </div>
                                            <div class="col-md-12 mb-2">
                                                <strong>СНИЛС:</strong><br/>
                                                @clientModel.SNILS
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="form-check mt-4">
                                    <InputCheckbox @bind-Value="clientModel.Agreement" 
                                                   class="form-check-input" 
                                                   id="agreement" />
                                    <label class="form-check-label" for="agreement">
                                        Я подтверждаю, что все предоставленные данные верны и подтверждаю согласие на обработку персональных данных *
                                    </label>
                                    <ValidationMessage For="@(() => clientModel.Agreement)" />
                                </div>
                            </div>
                        }
                        
                        <!-- Навигация -->
                        <div class="d-flex justify-content-between mt-4 pt-3 border-top">
                            @if (currentStep > 1)
                            {
                                <button type="button" class="btn btn-outline-secondary" @onclick="PreviousStep">
                                    <i class="fas fa-arrow-left me-1"></i>Назад
                                </button>
                            }
                            else
                            {
                                <div></div>
                            }
                            
                            @if (currentStep < 3)
                            {
                                <button type="button" class="btn btn-primary" @onclick="NextStep">
                                    Далее <i class="fas fa-arrow-right ms-1"></i>
                                </button>
                            }
                            else
                            {
                                <button type="submit" class="btn btn-success" disabled="@isSubmitting">
                                    @if (isSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        <span>Отправка...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-check me-1">Завершить регистрацию</i>
                                    }
                                </button>
                            }
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int currentStep = 1;
    private ClientModel clientModel = new();
    private bool isSubmitting = false;

    private string photoPage = "photoPage";
    private string photoPageInput = "photoPageInput";
    private string selfie = "selfie";
    private string selfieInput = "selfieInput";
    private string registration = "registration";
    private string registrationInput = "registrationInput";

    private List<RegistrationStep> registrationSteps = new()
    {
        new RegistrationStep { Number = 1, Title = "Основные данные" },
        new RegistrationStep { Number = 2, Title = "Документы" },
        new RegistrationStep { Number = 3, Title = "Паспортные данные" }
    };

    private void NextStep()
    {
        if (ValidateCurrentStep())
        {
            currentStep++;
            StateHasChanged();
        }
    }

    private void PreviousStep()
    {
        currentStep--;
        StateHasChanged();
    }

    private bool ValidateCurrentStep()
    {
        // Простая валидация для демонстрации
        if (currentStep == 1)
        {
            if (string.IsNullOrWhiteSpace(clientModel.LastName) ||
                string.IsNullOrWhiteSpace(clientModel.FirstName) ||
                string.IsNullOrWhiteSpace(clientModel.MiddleName) ||
                clientModel.BirthDate == null ||
                string.IsNullOrWhiteSpace(clientModel.Email) ||
                string.IsNullOrWhiteSpace(clientModel.Password))
            {
                JSRuntime.InvokeVoidAsync("alert", "Пожалуйста, заполните все обязательные поля");
                return false;
            }
            
            if (clientModel.Password != clientModel.ConfirmPassword)
            {
                JSRuntime.InvokeVoidAsync("alert", "Пароли не совпадают");
                return false;
            }
        }
        // else if (currentStep == 2)
        // {
        //     if (clientModel.PhotoPageImage == null ||
        //         clientModel.SelfieWithPassportImage == null ||
        //         clientModel.RegistrationPageImage == null)
        //     {
        //         JSRuntime.InvokeVoidAsync("alert", "Пожалуйста, загрузите все необходимые документы");
        //         return false;
        //     }
        // }
        
        return true;
    }

    private async Task HandleSubmit()
    {
        if (!ValidateCurrentStep() || !clientModel.Agreement)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Подтвердите согласие на обработку данных");
            return;
        }
            
        isSubmitting = true;
        StateHasChanged();

        // Имитация отправки данных на сервер
        await Task.Delay(3000);
        
        // Здесь должна быть реальная логика сохранения данных
        // await SaveClientData();
        
        isSubmitting = false;
        
        // Сообщение об успехе
        await JSRuntime.InvokeVoidAsync("alert", "Анкета успешно отправлена на проверку!");
        
        // В реальном приложении можно перенаправить на страницу успеха
        // NavigationManager.NavigateTo("/success");
    }

    private async Task HandleFileUpload(ChangeEventArgs e, string fileType)
    {
        // var file = e.File;
        // var maxFileSize = 5 * 1024 * 1024; // 5MB
        
        // if (file.Size > maxFileSize)
        // {
        //     await JSRuntime.InvokeVoidAsync("alert", "Файл слишком большой. Максимальный размер: 5MB");
        //     return;
        // }

        var buffer = new byte[11111]; //file.Size
        // await file.OpenReadStream(maxFileSize).ReadAsync(buffer);

        switch (fileType)
        {
            case "photoPage":
                clientModel.PhotoPageImage = buffer;
                break;
            case "selfie":
                clientModel.SelfieWithPassportImage = buffer;
                break;
            case "registration":
                clientModel.RegistrationPageImage = buffer;
                break;
        }
        
        StateHasChanged();
    }

    private void RemoveImage(string imageType)
    {
        switch (imageType)
        {
            case "photoPage":
                clientModel.PhotoPageImage = null;
                break;
            case "selfie":
                clientModel.SelfieWithPassportImage = null;
                break;
            case "registration":
                clientModel.RegistrationPageImage = null;
                break;
        }
        StateHasChanged();
    }

    private string GetImageUrl(byte[] imageData)
    {
        return $"data:image/jpeg;base64,{Convert.ToBase64String(imageData)}";
    }

    private async Task OpenFileInput(string elementId)
    {
        await JSRuntime.InvokeVoidAsync("document.getElementById", elementId);
        await JSRuntime.InvokeVoidAsync("eval", $"document.getElementById('{elementId}').click()");
    }

    // Модели данных
    public class ClientModel
    {
        // Шаг 1
        [Required(ErrorMessage = "Фамилия обязательна")]
        public string LastName { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Имя обязательно")]
        public string FirstName { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Отчество обязательно")]
        public string MiddleName { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Дата рождения обязательна")]
        public DateTime? BirthDate { get; set; }
        
        [Required(ErrorMessage = "Email обязателен")]
        [EmailAddress(ErrorMessage = "Неверный формат email")]
        public string Email { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Пароль обязателен")]
        [MinLength(8, ErrorMessage = "Пароль должен содержать не менее 8 символов")]
        public string Password { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Подтверждение пароля обязательно")]
        [Compare(nameof(Password), ErrorMessage = "Пароли не совпадают")]
        public string ConfirmPassword { get; set; } = string.Empty;
        
        // Шаг 2
        public byte[]? PhotoPageImage { get; set; }
        public byte[]? SelfieWithPassportImage { get; set; }
        public byte[]? RegistrationPageImage { get; set; }
        
        // Шаг 3
        [Required(ErrorMessage = "Серия паспорта обязательна")]
        [StringLength(4, ErrorMessage = "Серия должна содержать 4 цифры")]
        public string PassportSeries { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Номер паспорта обязателен")]
        [StringLength(6, ErrorMessage = "Номер должен содержать 6 цифр")]
        public string PassportNumber { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Поле 'Кем выдан' обязательно")]
        public string IssuedBy { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Дата выдачи обязательна")]
        public DateTime? IssueDate { get; set; }
        
        [Required(ErrorMessage = "Код подразделения обязателен")]
        public string DepartmentCode { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "Место рождения обязательно")]
        public string BirthPlace { get; set; } = string.Empty;
        
        [Required(ErrorMessage = "СНИЛС обязателен")]
        public string SNILS { get; set; } = string.Empty;
        
        [Range(typeof(bool), "true", "true", ErrorMessage = "Необходимо подтверждение")]
        public bool Agreement { get; set; } = false;
    }

    public class RegistrationStep
    {
        public int Number { get; set; }
        public string Title { get; set; } = string.Empty;
    }
}